---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template comprises a CI/CD pipeline that includes the actual CodePipeline 
  infrastructure definition together with its associated S3 bucket for source 
  artifact deployment and the bucket's access policy. Included is also an AWS 
  CodePipeline Service Policy and Role.

# ------------------------------------------


# ==========================================
Metadata: {}
# Metadata:


# ==========================================
# Parameters {}
Parameters:

  # ------------------------------------------
  # --- Name give to this project
  ProjectName:
    Description: "The Name given to this Project."
    ConstraintDescription: "Name must satisfy S3 constraints."
    Type: String
    Default: "cfn-www-cicd-cli"
    MinLength: 3
    MaxLength: 63
    AllowedPattern:
      (?!^(\d{1,3}\.){3}\d{1,3}$)(^[a-z0-9]([a-z0-9-]*(\.[a-z0-9])?)*$(?<!\-))

  # ------------------------------------------
  # --- The Base URL Domain Name
  DomainBaseURL:
    Description: "Domain Base URL Hosted Zone Apex"
    Type: String
    Default: "cloudemprise.org"
    AllowedPattern:
      ^(([a-zA-Z]{1})|([a-zA-Z]{1}[a-zA-Z]{1})|([a-zA-Z]{1}[0-9]{1})|([0-9]{1}[a-zA-Z]{1})|([a-zA-Z0-9][a-zA-Z0-9-_]{1,61}[a-zA-Z0-9]))\.([a-zA-Z]{2,6}|[a-zA-Z0-9-]{2,30}\.[a-zA-Z]{2,3})$

  # ------------------------------------------
  # --- CodeCommit Website Artifacts Repository Name
  CodeCommitRepoName:
    Description: "CodeCommit Repository for Website Documents"
    Type: String
    Default: "www-cloudemprise-html"

# ==========================================
Conditions: {}
# Conditions:


# ==========================================
Resources:


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         ARTIFACT STORE DEFINITION
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- S3 Artifact Bucket Definition
  BucketArtifacts:
    Type: "AWS::S3::Bucket"
    # .............................
    Properties:
      # .............................
      Tags:
        -
          Key: "Project"
          Value: !Sub "${ProjectName}"
      # .............................
      BucketName: !Sub "pipeline.${ProjectName}.${DomainBaseURL}"
      # .............................
      #BucketEncryption: 
      #  ServerSideEncryptionConfiguration: 
      #  - 
      #    ServerSideEncryptionByDefault: 
      #      SSEAlgorithm: "AES256"

  # ------------------------------------------
  # --- S3 Artifact Bucket Policy
  BucketArtifactsPolicy:
    # .............................
    Type: "AWS::S3::BucketPolicy"
    # .............................
    Properties:
      # .............................
      Bucket: !Ref BucketArtifacts
      PolicyDocument: 
        Version: "2012-10-17"
        Id: "SSEAndSSLPolicy"
        Statement:
          # ---
          - 
            Sid: "DenyUnEncryptedObjectUploads"
            Effect: "Deny"
            Principal: "*"
            Action: "s3:PutObject"
            Resource: !Sub "arn:aws:s3:::${BucketArtifacts}/*"
            Condition: 
              StringNotEquals: 
                "s3:x-amz-server-side-encryption": "aws:kms"
          # ---
          - 
            Sid: "DenyInsecureConnections"
            Effect: "Deny"
            Principal: "*"
            Action: "s3:*"
            Resource: !Sub "arn:aws:s3:::${BucketArtifacts}/*"
            Condition: 
              Bool: 
                "aws:SecureTransport": "false"


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         CODEPIPELINE DEFINITION
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- CodePipeline Definition
  CicdPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    # .............................
    Properties:
      # .............................
      Name: !Sub "${ProjectName}-pipe"
      # .............................
      Tags:
        -
          Key: "Project"
          Value: !Sub "${ProjectName}"
      # .............................
      RoleArn: !GetAtt CicdIamRole.Arn
      # .............................
      ArtifactStore: 
        Type: "S3"
        Location: !Ref BucketArtifacts
      # .............................
      Stages:
        # ---
        - 
          Name: "Source"
          Actions:
            # ---
            - 
              Name: "Source"
              ActionTypeId: 
                Category: "Source"
                Owner: "AWS"
                Provider: "CodeCommit"
                Version: "1"
              Configuration: 
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
                PollForSourceChanges: "false"
                RepositoryName: !Ref CodeCommitRepoName
              OutputArtifacts: 
                - 
                  Name: "SrcFiles"
              Region: !Ref AWS::Region
              Namespace: "SourceVariables"
              RunOrder: 1
        # ---
        - 
          Name: "Deploy"
          Actions:
            # ---
            - 
              Name: "Deploy"
              ActionTypeId: 
                Category: "Deploy"
                Owner: "AWS"
                Provider: "S3"
                Version: "1"
              Configuration: 
                BucketName: !Sub "${DomainBaseURL}"
                Extract: "true"
              InputArtifacts: 
                - 
                  Name: "SrcFiles"
              Region: !Ref AWS::Region
              Namespace: "DeployVariables"
              RunOrder: 1


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         IAM POLICIES & ROLES DEFINITION
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- IAM Role Definition
  CicdIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${ProjectName}-pipe-role-${AWS::Region}"
      Path: "/service-role/"
      MaxSessionDuration: 3600
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codepipeline.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      ManagedPolicyArns: 
        - !Ref CicdManagedPolicy

  # ------------------------------------------
  # --- IAM Policy Definition
  CicdManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    # .............................
    Properties:
      # .............................
      ManagedPolicyName: !Sub "${ProjectName}-pipe-service-${AWS::Region}"
      Path: "/service-role/"
      # .............................
      PolicyDocument: 
        Version: "2012-10-17"
        Id: !Sub "${ProjectName}-pipe-service"
        Statement:
          # ---
          - Action:
              - iam:PassRole
            Resource: "*"
            Effect: "Allow"
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
          # ---
          - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetRepository
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
            Resource: '*'
            Effect: Allow
          # ---
          - Action:
              - cloudwatch:*
              - s3:*
              - cloudformation:*
            Resource: '*'
            Effect: Allow


# ==========================================
Outputs: {}
# Outputs:
